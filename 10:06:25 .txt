package connection;
import com.mongodb.client.*;
import com.mongodb.client.model.Filters;
import com.mongodb.client.model.Updates;
import org.bson.Document;


public class Update {

    public static void main(String[] args) {
        /// creating a Mongo client
         MongoClient mongoClient = MongoClients.create("mongodb://localhost:27017");
        // get the database
         MongoDatabase database = mongoClient.getDatabase("myDb");
         //
         //get the collection
        MongoCollection<Document> collection = database.getCollection("myCollection");

        //FIND ALL doc
        collection.updateOne(Filters.eq("First_Name", "Mahesh"),
                Updates.set("e_mail", "mahesh@132.com"));
        System.out.println("Document updated successfully.");

        //printing updateddoc

        FindIterable<Document> updatedDocuments = collection.find(Filters.eq("First_Name", "Mahesh"));
        // Iterate through the updated documents and print them
        for (Document doc : updatedDocuments) {
            System.out.println("Updated Document: " + doc);
        }

    }
}

////Delete

package connection;

import com.mongodb.client.*;
import com.mongodb.client.model.Filters;
import com.mongodb.client.model.Updates;
import org.bson.Document;

public class Delete {

    public static void main(String[] args) {

        MongoClient mongoClient = MongoClients.create("mongodb://localhost:27017");
        MongoDatabase database = mongoClient.getDatabase("myDb");

        // get the collection
        MongoCollection<Document> collection = database.getCollection("myCollection");

        // find all and deleteone
        collection.deleteOne(Filters.eq("First_Name", "Mahesh"));
        System.out.println("Document deleted successfully.");

        // select a particular document
        FindIterable<Document> selectedDocuments = collection.find();

        // Iterate through the selected documents and print them

        for (Document doc : selectedDocuments) {
            System.out.println("Remaining Document: " + doc);
        }

    }
}

///DeleteMany

package connection;

import com.mongodb.client.*;
import com.mongodb.client.model.Filters;
import com.mongodb.client.model.Updates;
import org.bson.Document;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class DeleteMany

{

    public static void main(String[] args) {

        MongoClient mongoClient= MongoClients.create("mongodb://localhost:27017");
        MongoDatabase database = mongoClient.getDatabase("vit");

        // get the collection
        MongoCollection<Document> collection = database.getCollection("sales");

        // find all and deleteone
        collection.deleteMany(Filters.eq("item", "Cappuccino"));
        System.out.println("Document deleted successfully.");

        // select a particular document
        FindIterable<Document> selectedDocuments = collection.find();

        // Iterate through the selected documents and print them

//        for (Document doc : selectedDocuments) {
//            System.out.println("Remaining Document: " + doc);
//        }

       // print only even index

//        int index=0;
//        for (Document doc : selectedDocuments) {
//            if (index % 2 == 0) {
//                System.out.println("Remaining Document: " + doc);
//            }
//            index++;
//        }

        // Ascending order by price
//        FindIterable<Document> sortedDocuments = collection.find().sort(new Document("price", 1));
//        for (Document doc : sortedDocuments) {
//            System.out.println("Sorted Document: " + doc);
//        }

        // ascending oder but using java

        List<Document> documentList = new ArrayList<>();
        for (Document doc : collection.find()) {
            documentList.add(doc);
        }

        Collections.sort(documentList, (doc1, doc2) -> {
            Double price1 = doc1.getDouble("price");
            Double price2 = doc2.getDouble("price");
            return price2.compareTo(price1);
        });

        for (Document doc : documentList) {
            System.out.println("Sorted Document: " + doc);
        }


    }
}

///UpdateMany

package connection;

import com.mongodb.client.*;
import com.mongodb.client.model.Filters;
import com.mongodb.client.model.Updates;
import org.bson.Document;

public class UpdateMany {
    public static void main(String[] args) {
        // Creating a Mongo client
        MongoClient mongoClient = MongoClients.create("mongodb://localhost:27017");

        // Get the database (will be created if it doesn't exist)
        MongoDatabase database = mongoClient.getDatabase("myDb");

        // Get the collection (will be created if it doesn't exist)
        MongoCollection<Document> collection = database.getCollection("myCollection");

        // Insert a sample document to ensure the collection is created
        Document sampleDoc = new Document("First_Name", "Mahesh")
                .append("Last_Name", "Kumar")
                .append("e_mail", "mahesh@example.com");
        collection.insertOne(sampleDoc);

        // Update many documents
        collection.updateMany(Filters.eq("First_Name", "Mahesh"),
                Updates.combine(
                        Updates.set("e_mail", "maheshparashar@gmail.com"),
                        Updates.set("Last_Name", "Babu")));

        // Printing updated documents
        FindIterable<Document> updatedDocuments = collection.find(Filters.eq("First_Name", "Mahesh"));
        for (Document doc : updatedDocuments) {
            System.out.println("Updated Document: " + doc);
        }

        mongoClient.close();
    }
}

///DeleteMany and Ascending desending order 

package connection;

import com.mongodb.client.*;
import com.mongodb.client.model.Filters;
import com.mongodb.client.model.Updates;
import org.bson.Document;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class DeleteMany

{

    public static void main(String[] args) {

        MongoClient mongoClient= MongoClients.create("mongodb://localhost:27017");
        MongoDatabase database = mongoClient.getDatabase("vit");

        // get the collection
        MongoCollection<Document> collection = database.getCollection("sales");

        // find all and deleteone
        collection.deleteMany(Filters.eq("item", "Cappuccino"));
        System.out.println("Document deleted successfully.");

        // select a particular document
        FindIterable<Document> selectedDocuments = collection.find();

        // Iterate through the selected documents and print them

//        for (Document doc : selectedDocuments) {
//            System.out.println("Remaining Document: " + doc);
//        }

       // print only even index

//        int index=0;
//        for (Document doc : selectedDocuments) {
//            if (index % 2 == 0) {
//                System.out.println("Remaining Document: " + doc);
//            }
//            index++;
//        }

        // Ascending order by price
//        FindIterable<Document> sortedDocuments = collection.find().sort(new Document("price", 1));
//        for (Document doc : sortedDocuments) {
//            System.out.println("Sorted Document: " + doc);
//        }

        // ascending oder but using java

        List<Document> documentList = new ArrayList<>();
        for (Document doc : collection.find()) {
            documentList.add(doc);
        }

        Collections.sort(documentList, (doc1, doc2) -> {
            Double price1 = doc1.getDouble("price");
            Double price2 = doc2.getDouble("price");
            return price2.compareTo(price1);
        });

        for (Document doc : documentList) {
            System.out.println("Sorted Document: " + doc);
        }


    }
}


