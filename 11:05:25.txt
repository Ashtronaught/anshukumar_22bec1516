package connection;

import org.bson.Document;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.model.Aggregates;
import com.mongodb.client.model.Accumulators;
import com.mongodb.client.model.Sorts;
import com.mongodb.Block;

import java.util.Arrays;

public class ScenarioQuesTwo {
    public static void main(String[] args) {
        try (MongoClient mongo = MongoClients.create("mongodb://localhost:27017")) {
            MongoDatabase db = mongo.getDatabase("myDB");
            MongoCollection<Document> sales = db.getCollection("products");

            sales.aggregate(Arrays.asList(
                Aggregates.group("_id",
                    Accumulators.max("maxPrice", "$price"),
                    Accumulators.addToSet("sizes", "$size")
                ),
                Aggregates.sort(Sorts.descending("maxPrice"))
            )).forEach((Block<Document>) (Document doc) -> {
                System.out.printf("%-10s: $%2d (Sizes: %s)%n",
                    doc.getString("_id"),
                    doc.getDouble("maxPrice").intValue(),
                    doc.getList("sizes", String.class));
            });
        }
    }
}


///scenario 2


package connection;
import com.mongodb.client.*;
import com.mongodb.client.internal.MongoClientImpl;
import com.mongodb.client.model.Filters;
import org.bson.Document;

import java.util.Arrays;

import static com.mongodb.client.model.Accumulators.avg;
import static com.mongodb.client.model.Aggregates.group;

public class ScenarioQuesOne {

    public static void main(String[] args) {

        // creating a mongo client

        MongoClient mongoclient = MongoClients.create("mongodb://localhost:27017");

        // accsessing the database
        MongoDatabase database = mongoclient.getDatabase("myDb");

        // accessing the collection
        MongoCollection<Document> collection= database.getCollection("products");

        // Find all documents in the collection
        FindIterable<Document> documents = collection.find();

        // print the documents with price range 700 to 900

        System.out.println("Documents with price between 700 and 900:");
        for (Document doc: documents){
            int price = doc.getInteger("price");
            if (price >= 700 && price <= 900) {
                System.out.println(doc);
                System.out.println();
            }
        }

        /// method 2

        Document rangeQuery= new Document("price",new Document("gte",700).append("lt",900));
        FindIterable<Document> rangeDocuments = collection.find(rangeQuery);
        System.out.println("Documents with price between 700 and 900 using range query:");
        for (Document doc : rangeDocuments) {
            System.out.println(doc);
            System.out.println();
        }


        /// for finding average of all price

        AggregateIterable<Document> averagePrice = collection.aggregate(
                java.util.Collections.singletonList(
                        new Document("$group", new Document("_id", null)
                                .append("averagePrice", new Document("$avg", "$price")))
                )
        );

        //  using aggregation framework to find average price
        AggregateIterable<Document> res= collection.aggregate(Arrays.asList(group(null,avg("avgPrice","$price"))));


        System.out.println("Average price of all products:");
        for (Document doc : averagePrice) {
            System.out.println("Average Price: " + doc.getDouble("averagePrice"));
        }


        /// using java
        System.out.println("Using Java to find average price:");
        double totalPrice = 0;
        int count = 0;
        for (Document doc : documents) {
            totalPrice += doc.getDouble("price");
            count++;
        }
        double average = count > 0 ? totalPrice / count : 0;
        System.out.println("Average Price: " + average);



    }

}
////. 



package connection;
import com.mongodb.client.*;
import com.mongodb.client.model.Filters;
import org.bson.Document;


public class Tester2 {

    public static void main(String[] args) {
        /// creating a Mongo client
         MongoClient mongoClient = MongoClients.create("mongodb://localhost:27017");
        // get the database
         MongoDatabase database = mongoClient.getDatabase("myDb");
         //
         //get the collection
        MongoCollection<Document> collection = database.getCollection("myCollection");

        //FIND ALL doc
        FindIterable<Document> documents = collection.find();

        // Iterate through the documents and print them
        for (Document doc : documents) {
            System.out.println(doc);
        }

        System.out.println("Documents retrieved successfully.");
        //selected document

        FindIterable<Document> selectedDocuments = collection.find(Filters.eq("First_Name", "Mahesh"));
        // Iterate through the selected documents and print them
        for (Document doc : selectedDocuments) {
            System.out.println("Selected Document: " + doc);
        }

    }
}
